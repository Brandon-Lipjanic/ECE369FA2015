.data

.text


vbsme:

	addi $sp, $sp, -4	#make space on stack for sp
	sw   $ra, 0($sp)	#store $ra

	lw   $t2, 0($a0)	#$t2 = frame width
	lw   $t3, 4($a0)	#$t3 = frame height
	lw   $t4, 8($a0)	#t4 = window width
	lw   $t5, 12($a0)	#$t5 = window height

	sub  $t0, $t2, $t4	#rowDistance = (frame width - window width) + 1
	addi $t0, $t0, 1	# $t0 = rowDistance
	
	sub $t1, $t3, $t5	#colDistance = (frame height - window height)
				# $t1 = colDistance

	addi $t3, $zero, 1	#$t3 = whichLoop (initalize to 1)


frameSearch:

	add $s0, $t0, $t1	# s0 = rowDistance + colDistance
	beq $s0, $zero, exit	# go to exit if both rowDistance and colDistance = 0

	move $t8, $a1		# begin address = starting frame address

frameSearchSwitch:

	# do loop stuff

	addi	$s1, $zero, 1	
	beq	$s1, $t3, rowRightInitialize # move to rowRight

	addi	$s1, $zero, 2
	beq	$s1, $t3, colDownInitialize
	
	addi	$s1, $zero, 3
	beq	$s1, $t3, rowLeftInitialize

	addi	$s1, $zero, 4
	beq	$s1, $t3, colUpInitialize


rowRightInitialize:

	addi	$t4, $zero, 0
	
rowRight:

	beq	$t4, $t0, endRowRight
	# call window search

	addi 	$t8, $t8, 4
	addi	$t4, $t4, 1

	j rowRight

endRowRight:

	addi 	$t9, $t8, 0		#end address = begin address
	addi 	$t0, $t0, -1		# rowDistance--
	addi 	$t3, $zero, 2		# whichLoop = 2
	j endFrameSearchSwitch

colDownInitialize:

	addi 	$t4, $zero, 0		# i = 0
	sll	$t5, $t2, 2		# frame width * 4
	add	$t8, $t9, $t5		# begin address = end address + frame width *4

colDown:

	beq	$t4, $t1, endColDown	#
	# call window search
	addi 	$t4, $t4, 1			# i++
	add	$t8, $t8, $t5		#begin address = begin address + frame width *4

	j colDown

endColDown:
	
	addi	$t9, $t8, 0		# end address = begin address
	addi	$t1, $t1, -1		# colDistance--
	addi	$t3, $zero, 3		# whichLoop = 3
	j endFrameSearchSwitch
	
rowLeftInitialize:

	addi $t4, $t0, $zero 		# Storing row distance into t4 (i)

rowLeft:
	slt $s7, $t4, $zero		# go to endRowLeft when i < 0 
	bne $s7, $zero, endRowLeft	# go to endRow left if i < 0
	#call window search
	addi $t4, $t4, -1		# i--		
	addi $t8, $t8, -4		# decrement begin address by 4
	j rowLeft			# jump back to rowLeft
	

endRowLeft:

	addi $t9, $t8, 0		# set endAddress = beginAddress
	addi $t0, $t0, -1		# decrement colDistance by 1
	addi $t3, $zero, 4		# set whichLoop = 4
	j endFrameSearchSwitch		# jump to endFrameSearchSwitch

colUpInitialize:

	addi $t4, $t1, 0		# set i = colDistance
	sll $t5, $t2, 2			# multiply frameWidth by 4
	sub $t8, $t9, $t5		# beginAddress = endAddress - 4*frameWidth 

colUp:

	slt $s7, $t4, $zero		
	bne $s7, $zero, endColUp	# go to endColUp if i < 0
	#call window search		
	addi $t4, $t4, -1		# i--
	sub $t8, $t8, $t5		#beginAddress = beginAddress - 4*frameWidth
	j colUp	

endColUp:
	
	addi $t9, $t8, 0		# endAddress = beginAddress
	addi $t1, $t1, -1		# decrement colDistance	
	addi $t3, $zero, 1		# whichLoop = 1
	j endFrameSearchSwitch	

endFrameSearchSwitch:



windowSearch:

	#do stack stuff
	addi $t0, $zero, 0		# j = 0 collumn iterator	
	addi $t1, $zero, 0		# i = 0 row iterator
	
iterateDown:

	beq $t0, (windowHeight), returnSum

iterateAccross:	

	beq $t1, (windowLength), iterateDown
	
							#SUM = abs(winADR - FrameADR) + SUM
	addi $t1, $t1, 12		# i = i + 1
			
	
returnSum:

	addi $v0, $zero, 0
	add $v0, $v0, SUM 

sumOfAbsoluteDifference:


exit:


